@using CaseProcessor.DataAccess.Models
@using CaseProcessor.Website.Commons
@model CaseProcessor.DataAccess.Models.Case

@{
    ViewBag.Title = "Edit Case" + Model.SrNumber;
}

<div>
    <div class="row">
        <div class="col-md-6">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <div class="form-horizontal">
                    <h4>Case @Model.SrNumber</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.CaseId)

                    <div class="form-group">
                        @Html.LabelFor(model => model.SrNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.SrNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SrNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Level, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Level, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Level, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Version, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Version, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Version, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Customer, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Customer, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Customer, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.OpenDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.OpenDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.OpenDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Component, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Component, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Component, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EnumDropDownListFor(model => model.Location, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.InternalStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EnumDropDownListFor(model => model.InternalStatus, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.InternalStatus, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Owner, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Owner, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Owner, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DeveloperId, "DeveloperId", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("DeveloperId", UIHelper.SelectDevelopers(), htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.DeveloperId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="col-md-6">
            <div class="panel panel-primary">
                <div class="panel-heading">TODO List</div>
                <div class="panel-body">
                    @Html.Partial("/Views/ToDos/Index.cshtml", Model.ToDoList
                        , new ViewDataDictionary { new KeyValuePair<string, object>("CaseId", Model.CaseId) })
                </div>
            </div>
            <div class="panel panel-primary">
                <div class="panel-heading">Activities</div>
                <div class="panel-body">
                    @Html.Partial("/Views/Activities/Index.cshtml", Model.Activities
                        , new ViewDataDictionary { new KeyValuePair<string, object>("CaseId", Model.CaseId) })
                </div>
            </div>
            <div class="panel panel-primary">
                <div class="panel-heading">Environment</div>
                <div class="panel-body">
                    @Html.Partial("/Views/Environments/Index.cshtml", Model.Environments
                        , new ViewDataDictionary { new KeyValuePair<string, object>("CaseId", Model.CaseId) })
                </div>
            </div>
            <div class="panel panel-primary">
                <div class="panel-heading">Backlog</div>
                <div class="panel-body">
                    @Html.Partial("/Views/Backlogs/Details.cshtml", Model.Backlog
                        , new ViewDataDictionary { new KeyValuePair<string, object>("CaseId", Model.CaseId) })
                </div>
            </div>
        </div>
    </div>
</div>


<div>
    @Html.ActionLink("Back to List", "Index", Request.QueryString.ToRouteValueDictionary())
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}