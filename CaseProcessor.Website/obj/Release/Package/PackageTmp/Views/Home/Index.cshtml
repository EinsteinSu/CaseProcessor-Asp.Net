@using CaseProcessor.Website.Commons

@{
    ViewBag.Title = "Home Page";
    string currentSort = ViewBag.CurrentSort;
    if (string.IsNullOrEmpty(currentSort))
    {
        currentSort = "SrNumber";
    }

    @model IEnumerable<CaseProcessor.DataAccess.Models.Case>
}
<p style="margin-top: 10px">
    @Html.ActionLink("All Cases", "Index", new { query = 0 }, new { @class = "btn btn-primary" })
    @Html.ActionLink("Current Processing Cases", "Index", new { query = 1 }, new { @class = "btn btn-primary" })
    @Html.ActionLink("TODO cases", "Index", new { query = 2 }, new { @class = "btn btn-primary" })
    @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary" })

</p>
<div>
    <table id="example" class="table table-hover table-striped table-bordered">
        <thead>
            <tr>
                <th>
                    @*Request QueryString is the current url, below url is query = 0 then add another*@
                    @Html.ActionLink("CR", "Index", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.SrNumberSortParam))
                    @Html.SortIdentifier(currentSort, "SrNumber")
                </th>
                <th>
                    @Html.ActionLink("Level", "Index", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.LevelSortParam))
                    @Html.SortIdentifier(currentSort, "Level")
                </th>
                <th>
                    @Html.ActionLink("Duration", "Index", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.DurationSortParam))
                    @Html.SortIdentifier(currentSort, "Duration")
                </th>
                <th>
                    @Html.ActionLink("Status", "Index", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.InternalStatusSortParam))
                    @Html.SortIdentifier(currentSort, "InternalStatus")
                </th>
                <th>
                    @Html.ActionLink("Current TODO", "Index", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.CurrentToDoSortParam))
                    @Html.SortIdentifier(currentSort, "CurrentToDo")
                </th>
                <th>
                    @Html.ActionLink("Status", "Index", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.StatusSortParam))
                    @Html.SortIdentifier(currentSort, "Status")
                </th>
                <th>
                    @Html.ActionLink("Version", "Index", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.VersionSortParam))
                    @Html.SortIdentifier(currentSort, "Version")
                </th>
                <th>
                    @Html.ActionLink("Component", "Index", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.ComponentSortParam))
                    @Html.SortIdentifier(currentSort, "Component")
                </th>
                <th>Subject</th>
                <th>
                    @Html.ActionLink("Location", "Index", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.LocationSortParam))
                    @Html.SortIdentifier(currentSort, "Location")
                </th>
                <th>
                    @Html.ActionLink("Customer", "Index", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.CustomerSortParam))
                    @Html.SortIdentifier(currentSort, "Customer")
                </th>
                <th>
                    @Html.ActionLink("Owner", "Index", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.OwnerSortParam))
                    @Html.SortIdentifier(currentSort, "Owner")
                </th>
                <th>
                    @Html.ActionLink("Developer", "Index", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.DeveloperSortParam))
                    @Html.SortIdentifier(currentSort, "Developer")
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        <div class="dropdown">
                            <button class="btn btn-primary dropdown-toggle" type="button" data-toggle="dropdown">
                                @item.SrNumber
                                <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu">
                                <li>
                                    <a href='@string.Format("http://tfsreports.prod.quest.corp/ReportServer/Pages/ReportViewer.aspx?/Siebel/Service+Request&rs%3aCommand=Render&ID_C={0}", @item.SrNumber)'
                                       target="_blank">Open in website</a>
                                </li>
                                <li>@Html.ActionLink("Edit Case", "EditCase", new { id = item.CaseId })</li>
                                <li>@Html.ActionLink("Close Case", "Edit", "Closeds", new { id = item.CaseId }, new { })</li>
                                <li>@Html.ActionLink("Remove Case", "Delete", new { id = item.CaseId })</li>
                                <li></li>
                            </ul>
                        </div>
                    </td>
                    <td class='@UIHelper.ConvertLevel(item.Level)'>@item.Level</td>
                    <td>@item.Duration</td>
                    <td style="cursor: help" data-toggle="popover" title="Current Activity" data-content='@item.CurrentActivity' class='@UIHelper.ConvertStatus(item.InternalStatus)'>
                        @item.InternalStatus
                    </td>
                    <td>@item.CurrentToDo</td>
                    <td>@item.Status</td>
                    <td>@item.Version</td>
                    <td>@item.Component</td>
                    <td>@item.Subject</td>
                    <td>@item.Location</td>
                    <td>@item.Customer</td>
                    <td>@item.Owner</td>
                    <td>@item.Developer.Name</td>
                </tr>
            }
        </tbody>
    </table>
</div>
@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $('[data-toggle="popover"]').popover();
        });
    </script>
}